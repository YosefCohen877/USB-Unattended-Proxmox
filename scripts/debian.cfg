### Localization
d-i debian-installer/locale string en_US
d-i keyboard-configuration/xkb-keymap select us

# Choose the network interface
#d-i netcfg/choose_interface select auto

# Disable DHCP, enable static configuration
d-i netcfg/disable_dhcp boolean true

# Set static network configuration
d-i netcfg/get_ipaddress string 10.0.0.100
d-i netcfg/get_netmask string 255.255.255.0
d-i netcfg/get_gateway string 10.0.0.254    
d-i netcfg/get_nameservers string 10.0.0.254
d-i netcfg/confirm_static boolean true

# Configure temp hostname 
d-i netcfg/get_hostname string proxmox01
d-i netcfg/get_domain string unassigned-domain

### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string
d-i mirror/http/directory string
d-i mirror/http/proxy string
d-i apt-setup/use_mirror boolean false

### Account setup
d-i passwd/make-user boolean false
d-i passwd/root-password password abc_123
d-i passwd/root-password-again password abc_123

### Clock and time zone setup
d-i time/zone string Asia/Jerusalem
d-i clock-setup/ntp boolean false

### Partitioning
d-i partman-auto/disk string /dev/sda
d-i partman-auto/method string lvm
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true
d-i partman-auto-lvm/guided_size string max
d-i partman-auto/choose_recipe select atomic
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

### Base system installation
d-i base-installer/kernel/image string linux-image-amd64

### Package selection
tasksel tasksel/first multiselect standard, ssh-server

### Boot loader installation
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

### Finishing up the installation
d-i finish-install/reboot_in_progress note

# Start the preseed late command
d-i preseed/late_command string \

# Automatically mount the Ventoy USB
# Create the post installation script
in-target sh -c 'echo "#!/bin/bash" > /root/post_install_script.sh'; \

# Identify the Ventoy USB device and assign it to a variable
in-target sh -c 'echo "USBDEV=$(blkid -L Ventoy)" >> /root/post_install_script.sh'; \

# Create a directory to mount the USB device
in-target sh -c 'echo "mkdir -p /mnt/usb" >> /root/post_install_script.sh'; \

# Mount the Ventoy USB device
in-target sh -c 'echo "mount \$USBDEV /mnt/usb" >> /root/post_install_script.sh'; \

# Copy files from the USB to the /mnt/proxmox directory
# Copy Proxmox related scripts
in-target sh -c 'echo "cp -R /mnt/usb/scripts/proxmox/ /mnt/" >> /root/post_install_script.sh'; \

# Unmount the USB device
in-target sh -c 'echo "umount /mnt/usb" >> /root/post_install_script.sh'; \

# Copy Debian package files to the local package cache
in-target sh -c 'echo "cp /mnt/proxmox/apt/packeges/*.deb /var/cache/apt/archives/" >> /root/post_install_script.sh'; \

# Copy APT list files and sources to the appropriate directories
in-target sh -c 'echo "cp /mnt/proxmox/apt/lists/* /var/lib/apt/lists/" >> /root/post_install_script.sh'; \
in-target sh -c 'echo "cp /mnt/proxmox/apt/sources.list /etc/apt/" >> /root/post_install_script.sh'; \
in-target sh -c 'echo "cp /mnt/proxmox/apt/sources.list.d/* /etc/apt/sources.list.d/" >> /root/post_install_script.sh'; \

# Install Ansible and execute the playbook
# Install Ansible package
in-target sh -c 'echo "apt install ansible -y >> /dev/tty1" >> /root/post_install_script.sh'; \

# Run the Ansible playbook and log its output
in-target sh -c 'echo "ansible-playbook /mnt/proxmox/ansible/phase01.yaml 2>&1 | tee /dev/tty1 /mnt/proxmox/ansible/phase01.log" >> /root/post_install_script.sh'; \

# Make the script executable
in-target chmod +x /root/post_install_script.sh; \

# Create and enable a systemd service to run the script
# Define a new systemd service
in-target sh -c 'printf "[Unit]\nDescription=One Time Post Install Script\n\n[Service]\nType=oneshot\nExecStart=/root/post_install_script.sh\nRemainAfterExit=yes\n\n[Install]\nWantedBy=multi-user.target" > /etc/systemd/system/post-install.service'; \

# Enable the newly created systemd service
in-target systemctl enable post-install.service
